"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта,
введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""

from itertools import cycle


class UserInputNumberError(Exception):

    def __init__(self, value: str):
        self.txt = f"Введено не число: {value}"


if __name__ == '__main__':

    values = []
    for _ in cycle('****'):
        value = input("Введите очередное число: ")

        if value == "stop":
            print(values)
            break;

        try:
            if not value.isdigit():
                raise UserInputNumberError(value)
            else:
                values.append(value)

        except UserInputNumberError as e:
            print(e.txt)

